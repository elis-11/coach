import React, { useEffect, useState } from "react";
import { FaEdit } from "react-icons/fa";
import { FaTrashAlt } from "react-icons/fa";
import "./EBook.scss";

export const EBook = () => {
  const [books, setBooks] = useState(() => {
    const savedBooks = localStorage.getItem("books");
    if (savedBooks) {
      return JSON.parse(savedBooks);
    } else {
      return [];
    }
  });

  const [book, setBook] = useState("");
  const [isEditing, setIsEditing] = useState(false);
  const [currentBook, setCurrentBook] = useState({});

  useEffect(() => {
    localStorage.setItem("books", JSON.stringify(books));
  }, [books]);

  const handleBookChange = (e) => {
    setBook(e.target.value);
  };

  const handleEditBook = (e) => {
    setCurrentBook({ ...currentBook, text: e.target.value });
    console.log(currentBook);
  };

  const handleFormSubmit = (e) => {
    e.preventDefault();

    if (book !== "") {
      setBooks([
        ...books,
        {
          id: books.length + 1,
          text: book.trim(),
        },
      ]);
    }
    setBook("");
  };

  const handleEditFormSubmit = (e) => {
    e.preventDefault();
    handleUpdateBook(currentBook.id, currentBook);
  };

  const handleDeleteBook = (id) => {
    const removeBook = books.filter((book) => book.id !== id);
    setBooks(removeBook);
  };

  const handleUpdateBook = (id, updatedBook) => {
    const updatedItem = books.map((book) => {
      return book.id === id ? updatedBook : book;
    });
    setIsEditing(false);
    setBooks(updatedItem);
  };

  const handleEditClick = (book) => {
    setIsEditing(true);
    setCurrentBook({ ...book });
  };

  return (
    <div className="EBook">
      <h2>Book App</h2>
      {isEditing ? (
        <form onSubmit={handleEditFormSubmit}>
          <h2>Edit Book</h2>
          <label htmlFor="editBook"></label>
          <input
            name="editBook"
            type="text"
            placeholder="Edit Book"
            value={currentBook.text}
            onChange={handleEditBook}
          />
          <button type="submit">Update</button>
          <button onClick={() => setIsEditing(false)}>Cancel</button>
        </form>
      ) : (
        <form onSubmit={handleFormSubmit}>
          {/* <h2>Add Book</h2> */}
          <label htmlFor="addBook"> </label>
          <input
            name="book"
            type="text"
            placeholder="Create a new Book "
            value={book}
            onChange={handleBookChange}
          />
        </form>
      )}

      <div className="book-list">
        {books.map((book) => (
          // <div key={book.id}>{book.text}
          <div key={book.id} className="book">
            {book.text}
            <div>{book.title}</div>
            <div>{book.author}</div>
            <div className="icons">
              <FaEdit
                onClick={() => handleEditClick(book)}
                className="icon"
                role="button"
                tabIndex="0"
              />
              <FaTrashAlt
                onClick={() => handleDeleteBook(book.id)}
                className="icon"
                role="button"
                tabIndex="0"
              />
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};
